#!/bin/sh
#
# Set up the variables used by OpenVPN set up tasks.

cd $(dirname $0)/..

read -p "Server IP/hostname: " host
echo $host > inventory

mkdir -p group_vars/all

VARS=group_vars/all/vars.yml
VAULT_VARS=group_vars/all/secret.yml
VAULT_PASS=".vault_pass.txt"

cp bin/all.yml group_vars/all/vars.yml

prompt_with_default()
{
  __prompt="$(eval echo \"$1 [\$$2\]: \")"
  read -p "$__prompt" ans
  eval "$2=\${ans:-\$$2}"
}

server_host_name=example.domain.com
prompt_with_default "host name" server_host_name

vault_root_password=MyR00tPa33w0rd
prompt_with_default "root password" vault_root_password

server_deploy_user_name=deploy
prompt_with_default "deploy user name" server_deploy_user_name
vault_deploy_password=MyD3pl0yPas3w0rd
prompt_with_default "deploy user password" vault_deploy_password

server_logwatch_email=youremail@example.com
prompt_with_default "logwatch reports email" server_logwatch_email

openvpn_key_country=US
prompt_with_default "OpenVPN SSL key country" openvpn_key_country

openvpn_key_province=CA
prompt_with_default "OpenVPN SSL key province" openvpn_key_province

openvpn_key_city=YourCity
prompt_with_default "OpenVPN SSL key city" openvpn_key_city

openvpn_key_org=YourOrg
prompt_with_default "OpenVPN SSL key org" openvpn_key_org

openvpn_key_email=OpenVPNKeyEmail@somewhere.com
prompt_with_default "OpenVPN SSL key email" openvpn_key_email

for i in server_host_name server_deploy_user_name server_logwatch_email \
  openvpn_key_country openvpn_key_province \
  openvpn_key_city openvpn_key_org openvpn_key_email; do
  echo "$i: $(eval echo \$$i)" >> $VARS
done

vault_root_encrypted_password=$(./bin/mkpasswd "$vault_root_password")
if [ $? -ne 0 ]; then exit $?; fi
vault_deploy_encrypted_password=$(./bin/mkpasswd "$vault_deploy_password")

echo "---" > $VAULT_VARS
for i in root deploy; do
  v="vault_${i}_password"; e="vault_${i}_encrypted_password"
  for j in $v $e; do
    echo "$j: $(eval echo \\\'\"\$$j\"\\\')" >> $VAULT_VARS
  done
done

tmp=.tmp$$; touch $tmp; chmod 600 $tmp
trap "rm -f $tmp" EXIT
echo ''
echo 'Setting up your VPN users next.'
echo ''
end_loop=no
while [ $end_loop = 'no' ]; do
  read -p "Type in a username (or . to end): " my_user
  if [ "$my_user" = "." ]; then break; fi
  if [ -z "$my_user" ]; then
    echo "You must enter a user. Try again."
    continue
  fi
  read -p "Password for $my_user: " my_pass
  if [ -z "$my_pass" ]; then
    echo "You must enter a password. Try again."
    continue
  fi
  echo "  - { name: '$my_user', password: '$my_pass' }" >> $tmp
done
if [ ! -s $tmp ]; then
  echo "ERROR: You must have at least one user!"
  exit 1
fi
echo 'vault_vpn_users:' >> $VAULT_VARS
cat $tmp >> $VAULT_VARS

vault_pass='This is my c00l vault password'
prompt_with_default "Your vault password" vault_pass
echo "$vault_pass" > $VAULT_PASS
ansible-vault encrypt $VAULT_VARS
